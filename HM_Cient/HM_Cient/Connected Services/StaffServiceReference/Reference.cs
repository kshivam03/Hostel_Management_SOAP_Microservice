//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HM_Cient.StaffServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Staff", Namespace="http://schemas.datacontract.org/2004/07/HM_Service")]
    [System.SerializableAttribute()]
    public partial class Staff : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfJoiningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StaffIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfJoining {
            get {
                return this.DateOfJoiningField;
            }
            set {
                if ((this.DateOfJoiningField.Equals(value) != true)) {
                    this.DateOfJoiningField = value;
                    this.RaisePropertyChanged("DateOfJoining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StaffId {
            get {
                return this.StaffIdField;
            }
            set {
                if ((this.StaffIdField.Equals(value) != true)) {
                    this.StaffIdField = value;
                    this.RaisePropertyChanged("StaffId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkType {
            get {
                return this.WorkTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTypeField, value) != true)) {
                    this.WorkTypeField = value;
                    this.RaisePropertyChanged("WorkType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StaffServiceReference.IStaffService")]
    public interface IStaffService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/GetAllStaffs", ReplyAction="http://tempuri.org/IStaffService/GetAllStaffsResponse")]
        System.Data.DataSet GetAllStaffs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/GetAllStaffs", ReplyAction="http://tempuri.org/IStaffService/GetAllStaffsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllStaffsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/GetStaff", ReplyAction="http://tempuri.org/IStaffService/GetStaffResponse")]
        HM_Cient.StaffServiceReference.Staff GetStaff(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/GetStaff", ReplyAction="http://tempuri.org/IStaffService/GetStaffResponse")]
        System.Threading.Tasks.Task<HM_Cient.StaffServiceReference.Staff> GetStaffAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/AddStaff", ReplyAction="http://tempuri.org/IStaffService/AddStaffResponse")]
        int AddStaff(HM_Cient.StaffServiceReference.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/AddStaff", ReplyAction="http://tempuri.org/IStaffService/AddStaffResponse")]
        System.Threading.Tasks.Task<int> AddStaffAsync(HM_Cient.StaffServiceReference.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/DeleteStaff", ReplyAction="http://tempuri.org/IStaffService/DeleteStaffResponse")]
        int DeleteStaff(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/DeleteStaff", ReplyAction="http://tempuri.org/IStaffService/DeleteStaffResponse")]
        System.Threading.Tasks.Task<int> DeleteStaffAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/UpdateStaff", ReplyAction="http://tempuri.org/IStaffService/UpdateStaffResponse")]
        int UpdateStaff(HM_Cient.StaffServiceReference.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/UpdateStaff", ReplyAction="http://tempuri.org/IStaffService/UpdateStaffResponse")]
        System.Threading.Tasks.Task<int> UpdateStaffAsync(HM_Cient.StaffServiceReference.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/NoOfStaffs", ReplyAction="http://tempuri.org/IStaffService/NoOfStaffsResponse")]
        int NoOfStaffs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/NoOfStaffs", ReplyAction="http://tempuri.org/IStaffService/NoOfStaffsResponse")]
        System.Threading.Tasks.Task<int> NoOfStaffsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/GetStaffsByFirstName", ReplyAction="http://tempuri.org/IStaffService/GetStaffsByFirstNameResponse")]
        System.Data.DataSet GetStaffsByFirstName(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/GetStaffsByFirstName", ReplyAction="http://tempuri.org/IStaffService/GetStaffsByFirstNameResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStaffsByFirstNameAsync(string firstName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStaffServiceChannel : HM_Cient.StaffServiceReference.IStaffService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StaffServiceClient : System.ServiceModel.ClientBase<HM_Cient.StaffServiceReference.IStaffService>, HM_Cient.StaffServiceReference.IStaffService {
        
        public StaffServiceClient() {
        }
        
        public StaffServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StaffServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StaffServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StaffServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetAllStaffs() {
            return base.Channel.GetAllStaffs();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllStaffsAsync() {
            return base.Channel.GetAllStaffsAsync();
        }
        
        public HM_Cient.StaffServiceReference.Staff GetStaff(int id) {
            return base.Channel.GetStaff(id);
        }
        
        public System.Threading.Tasks.Task<HM_Cient.StaffServiceReference.Staff> GetStaffAsync(int id) {
            return base.Channel.GetStaffAsync(id);
        }
        
        public int AddStaff(HM_Cient.StaffServiceReference.Staff staff) {
            return base.Channel.AddStaff(staff);
        }
        
        public System.Threading.Tasks.Task<int> AddStaffAsync(HM_Cient.StaffServiceReference.Staff staff) {
            return base.Channel.AddStaffAsync(staff);
        }
        
        public int DeleteStaff(int id) {
            return base.Channel.DeleteStaff(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteStaffAsync(int id) {
            return base.Channel.DeleteStaffAsync(id);
        }
        
        public int UpdateStaff(HM_Cient.StaffServiceReference.Staff staff) {
            return base.Channel.UpdateStaff(staff);
        }
        
        public System.Threading.Tasks.Task<int> UpdateStaffAsync(HM_Cient.StaffServiceReference.Staff staff) {
            return base.Channel.UpdateStaffAsync(staff);
        }
        
        public int NoOfStaffs() {
            return base.Channel.NoOfStaffs();
        }
        
        public System.Threading.Tasks.Task<int> NoOfStaffsAsync() {
            return base.Channel.NoOfStaffsAsync();
        }
        
        public System.Data.DataSet GetStaffsByFirstName(string firstName) {
            return base.Channel.GetStaffsByFirstName(firstName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStaffsByFirstNameAsync(string firstName) {
            return base.Channel.GetStaffsByFirstNameAsync(firstName);
        }
    }
}
